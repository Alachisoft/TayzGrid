// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AggregateFunctionType.proto

package com.alachisoft.tayzgrid.common.protobuf;

public final class AggregateFunctionTypeProtocol {
  private AggregateFunctionTypeProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum AggregateFunctionType
      implements com.google.protobuf.ProtocolMessageEnum {
    SUM(0, 0),
    COUNT(1, 1),
    MIN(2, 2),
    MAX(3, 3),
    AVG(4, 4),
    NOTAPPLICABLE(5, 5),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static AggregateFunctionType valueOf(int value) {
      switch (value) {
        case 0: return SUM;
        case 1: return COUNT;
        case 2: return MIN;
        case 3: return MAX;
        case 4: return AVG;
        case 5: return NOTAPPLICABLE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<AggregateFunctionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AggregateFunctionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AggregateFunctionType>() {
            public AggregateFunctionType findValueByNumber(int number) {
              return AggregateFunctionType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.alachisoft.tayzgrid.common.protobuf.AggregateFunctionTypeProtocol.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final AggregateFunctionType[] VALUES = {
      SUM, COUNT, MIN, MAX, AVG, NOTAPPLICABLE, 
    };
    public static AggregateFunctionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private AggregateFunctionType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.alachisoft.tayzgrid.common.protobuf.AggregateFunctionTypeProtocol.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.alachisoft.tayzgrid.common.protobuf.AggregateFunctionType)
  }
  
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033AggregateFunctionType.proto\022\'com.alach" +
      "isoft.tayzgrid.common.protobuf*Y\n\025Aggreg" +
      "ateFunctionType\022\007\n\003SUM\020\000\022\t\n\005COUNT\020\001\022\007\n\003M" +
      "IN\020\002\022\007\n\003MAX\020\003\022\007\n\003AVG\020\004\022\021\n\rNOTAPPLICABLE\020" +
      "\005B\037B\035AggregateFunctionTypeProtocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
